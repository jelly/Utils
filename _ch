#compdef ch
# copy this file to /usr/share/zsh/site-functions/_ch

_ch_build(){	
    local -a _options
    _options=(
        '64:64bit extra'
	'64t:64bit testing'
	'64ml:64bit multilib'
	'64mlt:64bit multilib testing'
	'64s:64bit staging'
        '32:32bit extra'
	'32t:32bit testing'
	'32ml:32bit multilib'
	'32mlt:32bit multilib testing'
	'32s:32bit staging'
    )
    _describe options _options
}

_ch_install(){	
    local -a _options
    _options=(
        '64:64bit extra'
	'64t:64bit testing'
	'64ml:64bit multilib'
	'64mlt:64bit multilib testing'
	'64s:64bit staging'
        '32:32bit extra'
	'32t:32bit testing'
	'32ml:32bit multilib'
	'32mlt:32bit multilib testing'
	'32s:32bit staging'
    )
    _describe options _options
}
_ch_command(){
    local -a _ch_cmds
    _ch_cmds=(
	'build:<id> builds the current package for multiple chroots'
	'clean:remove all working copies'
	'kill:remove all existing chroots'
 	'update:update all chroots'
	'install:<id> <package files> install the packages files in the chroot '
	'list:list all existing master chroots'
    )
    if (( CURRENT == 1 )); then
        _describe -t commands 'ch command' _ch_cmds
    elif (( CURRENT == 2)); then
        local curcontext="$curcontext"
        cmd="${${_ch_cmds[(r)$words[1]:*]%%:*}}"
        if (( $#cmd )); then
            if (( $+functions[_ch_$cmd] )); then
                _ch_$cmd
            fi
        else
            _message "unknown ch command: $words[1]"
        fi
   elif (( CURRENT == 3)); then
        cmd="${${_ch_cmds[(r)$words[1]:*]%%:*}}"
	if [[ $cmd == "install" ]]; then
	   _files
	fi
   fi
}


_arguments -s \
    '*::ch commands:_ch_command'
